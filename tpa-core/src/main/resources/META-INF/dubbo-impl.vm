package ${table.packageName}.facade.impl;

##imports
import ${table.namespace};
import ${table.namespace}Facade;
import ${table.namespace}Service;
import ${table.primaryKey.javaType};
import java.util.List;
import com.tongbanjie.commons.lang.Result;
import com.tbjfund.framework.tpa.lang.OrderBy;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

@Service
public class ${table.beanName}FacadeImpl implements ${table.beanName}Facade{

    @Autowired
    private ${table.beanName}Service ${table.injectName}Service;

    private Logger logger = LoggerFactory.getLogger(${table.beanName}FacadeImpl.class);

    @Override
    public Result<${table.beanName}> getById(${table.primaryKey.SimpleJavaType} id){
        try {
            ${table.beanName} r = ${table.injectName}Service.getById(id);
            return Result.buildSucc(r);
        } catch (Exception e) {
            logger.error("", e);
        }
        return Result.buildFail("-1", "接口异常");
    }

    @Override
    public Result<List<${table.beanName}>> getList(${table.beanName} ${table.injectName}, Integer offset, Integer rows, OrderBy orderBy){
        try {
            List<${table.beanName}> r = ${table.injectName}Service.getList(${table.injectName}, offset, rows, orderBy);
            return Result.buildSucc(r);
        } catch (Exception e) {
            logger.error("", e);
        }
        return Result.buildFail("-1", "接口异常");
    }

    @Override
    public Result<List<${table.beanName}>> getList(${table.beanName} ${table.injectName}, Integer offset, Integer rows){
        try {
            List<${table.beanName}> r = ${table.injectName}Service.getList(${table.injectName}, offset, rows);
            return Result.buildSucc(r);
        } catch (Exception e) {
            logger.error("", e);
        }
        return Result.buildFail("-1", "接口异常");
    }

    @Override
    public Result<Integer> getCount(${table.beanName} ${table.injectName}){
        try {
            Integer r = ${table.injectName}Service.getCount(${table.injectName});
            return Result.buildSucc(r);
        } catch (Exception e) {
            logger.error("", e);
        }
        return Result.buildFail("-1", "接口异常");
    }

    @Override
    public Result<Integer> insert(${table.beanName} ${table.injectName}){
        try {
            Integer r = ${table.injectName}Service.insert(${table.injectName});
            return Result.buildSucc(r);
        } catch (Exception e) {
            logger.error("", e);
        }
        return Result.buildFail("-1", "接口异常");
    }

    @Override
    public Result<Integer> deleteById(${table.primaryKey.SimpleJavaType} key){
        try {
            Integer r = ${table.injectName}Service.deleteById(key);
            return Result.buildSucc(r);
        } catch (Exception e) {
            logger.error("", e);
        }
        return Result.buildFail("-1", "接口异常");
    }

    @Override
    public Result<Integer> updateById(${table.beanName} ${table.injectName}){
        try {
            Integer r = ${table.injectName}Service.updateById(${table.injectName});
            return Result.buildSucc(r);
        } catch (Exception e) {
            logger.error("", e);
        }
        return Result.buildFail("-1", "接口异常");
    }

}